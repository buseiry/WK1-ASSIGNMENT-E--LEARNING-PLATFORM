rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection (public read for leaderboard, auth required for writes)
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Sessions collection (simple auth guard for reads/writes)
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null;
    }
    
    // Manual Payments collection
    match /manualPayments/{paymentId} {
      // Users can read their own payments
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Users can create manual payments for themselves
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.keys().hasAll(['userId', 'userEmail', 'amount', 'method', 'reference', 'status']);
      
      // Users can update their own pending payments (for corrections)
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId &&
        resource.data.status == 'pending' &&
        request.resource.data.status == 'pending';
      
      // Admin can update payment status
      allow update: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Legacy payments collection
    match /payments/{paymentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.keys().hasAll(['userId', 'email', 'amount', 'status']);
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Leaderboard collection (public read, auth required for writes)
    match /leaderboard/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Admin collection (only for admin users)
    match /admin/{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Session logs collection (admin only)
    match /session-logs/{logId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Error logs collection (admin only)
    match /error-logs/{logId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Admin actions collection (admin only)
    match /adminActions/{actionId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}



